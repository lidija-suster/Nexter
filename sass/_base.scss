// COLOR VARIABLES
$color-primary: #c69963;
$color-primary-dark: #B28451;

$color-secondary: #101d2c;

$color-grey-light-1: #f9f7f6;
$color-grey-light-2: #aaa;

$color-grey-dark-1: #54483A;
$color-grey-dark-2: #6D5D4B;

// FONT VARIABLES
$font-primary: 'Nunito', sans-serif;
$font-display: 'Josefin Sans', sans-serif;

// RESPONSIVE BREAKPOINTS
// 1200px breakpoint, 16px browser default
$bp-largest: 75em; // 1200px / 16
$bp-large: 62.5em; // 1000px

*, *::before, *::after {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

html {
    box-sizing: border-box;
    font-size: 62.5%; // 10px / 16px = 62.5% -> 1rem = 10px

    @media only screen and (max-width: $bp-largest) {
        // Decrease font size by 50% when breakpoint is reached
        font-size: 50%;
    }
}

body {
    font-family: $font-primary;
    color: $color-grey-dark-2;
    font-weight: 300;
    line-height: 1.6;
}

.container {
    display: grid;
    // Think responsive from the beginning: definition of rows
    grid-template-rows: 80vh min-content 40vw repeat(3, min-content);
    // 8 columns, width between minimun content and 14rem (140px)
    // 8rem is a column for sidebar
    // 1fr (minmax(6rem, 1fr)) ensures to cover remaining space between sidebar and 8 columns, 
    // and are serving for forming the full-bleed section
    // Square brackets: column names
    // For complex layouts, it is the best to give them names, if you plan to write media queries later on
    grid-template-columns: [sidebar-start] 8rem [sidebar-end full-start] minmax(6rem, 1fr) [center-start] 
    repeat(8, [col-start] minmax(min-content, 14rem) [col-end]) [center-end] minmax(6rem, 1fr) [full-end];

    @media only screen and (max-width: $bp-large) {
        // With CSS grid, simple change of rows and colums can make a great difference
        // 1rem is 8px at this screen width (font size reduced to 50%)
        grid-template-rows: 6rem 80vh min-content 40vw repeat(3, min-content);
        grid-template-columns: [full-start] minmax(6rem, 1fr) [center-start] 
        repeat(8, [col-start] minmax(min-content, 14rem) [col-end]) [center-end] minmax(6rem, 1fr) [full-end];
    }
}